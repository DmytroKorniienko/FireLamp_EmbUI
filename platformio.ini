; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
data_dir  = ./data
default_envs = esp8266dev ;esp8266dev ; если нужна сборка для всего, можно просто закомментировать окружение по умолчанию
extra_configs =
  user_*.ini
; подключаем дополнительные конфиги platformio в виде user_*.ini файлов
; если вам нужна свой env для сборки, оформляйте его в виде доп ini файлов, они не будут обновляться из репозитория
; подробнее
; https://docs.platformio.org/en/latest/projectconf/section_platformio.html#extra-configs

; extra_scripts = !python LittleFSBuilder.py

[extra]
build_flags =
    !python git_rev_macro.py
    -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH
    -DFASTLED_USE_PROGMEM=1
    -DFASTLED_NEEDS_YIELD=1
    -DFASTLED_ESP8266_RAW_PIN_ORDER
    -DEMBUI_IFACE_DYN_JSON_SIZE=2048
    -DEMBUI_SMALL_JSON_SIZE=768
    ; -DEMBUI_CFGSIZE=3072
    -DEMBUI_TZONE=TZ_Etc_GMT
    -DEMBUI_IDPREFIX='FireLamp-'
    -DEMBUI_USE_EXTERNAL_WS_BUFFER=2048
    ; -DEMBUI_USE_SECHEAP
    -DEMBUI_USE_FTP
    -DEMBUI_USE_SSDP
    -DEMBUI_USE_UDP
    -DEMBUI_USE_MQTT
    -DEMBUI_SSDP_NAME="FireLamp"
    -DEMBUI_SSDP_URLMODEL="https:__I(/)__I(/)github.com/DmytroKorniienko/FireLamp_EmbUI"
    -DEMBUI_SSDP_MODEL="FireLamp"
    -DEMBUI_SSDP_URLMANUF="https:__I(/)__I(/)github.com/DmytroKorniienko/FireLamp_EmbUI"
    -DEMBUI_SSDP_MANUF="kDn"
    -Wl,-gc-sections
    -DVTABLES_IN_FLASH
    -ffunction-sections
    -fdata-sections

[extra32]
build_flags =
    !python git_rev_macro.py
    -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH
    ; -DFASTLED_USE_PROGMEM=1 ; не поддерживается ESP32
    ; -DEMBUI_IFACE_DYN_JSON_SIZE=2048
    ; -DEMBUI_SMALL_JSON_SIZE=768
    ; -DEMBUI_CFGSIZE=3072
    -DEMBUI_TZONE=TZ_Etc_GMT
    -DEMBUI_IDPREFIX='EmbUI_Device-'
    -DEMBUI_USE_EXTERNAL_WS_BUFFER=4096
    -DEMBUI_USE_FTP
    -DEMBUI_USE_SSDP
    -DEMBUI_USE_UDP
    -DEMBUI_USE_MQTT
    -DEMBUI_SSDP_NAME="FireLamp"
    -DEMBUI_SSDP_URLMODEL="https:__I(/)__I(/)github.com/DmytroKorniienko/FireLamp_EmbUI"
    -DEMBUI_SSDP_MODEL="FireLamp"
    -DEMBUI_SSDP_URLMANUF="https:__I(/)__I(/)github.com/DmytroKorniienko/FireLamp_EmbUI"
    -DEMBUI_SSDP_MANUF="kDn"
    ; -DLED_BUILTIN=2 ; нельзя использовать в глобальной конфигурации, т.к. конфликт с ESP32-C3 и ESP32-S2
    -Wl,-gc-sections
    -DVTABLES_IN_FLASH
    -ffunction-sections
    -fdata-sections 

[env]
framework = arduino
board_build.filesystem = littlefs
lib_deps =
    https://github.com/FastLED/FastLED.git#3.4.0 ; revert to 3.4.0 since now FastLed broken https://github.com/FastLED/FastLED/pull/1256#issuecomment-882602084
	;https://github.com/DFRobot/DFRobotDFPlayerMini
    https://github.com/DmytroKorniienko/DFRobotDFPlayerMini
;monitor_speed = 115200
monitor_speed = 460800
upload_speed = 460800
monitor_flags =
  --quiet
  --echo
  --eol
    LF
;   --filter
;     colorize
  --filter
    time

[env32]
framework = arduino
board_build.filesystem = littlefs
lib_deps =
    https://github.com/FastLED/FastLED.git
    ; https://github.com/lorol/LITTLEFS.git ; отключить с выходом нового ядра
    https://github.com/plerup/espsoftwareserial.git ; отключить с выходом нового ядра (от него зависит DFPlayer, отключать нельзя)
    https://github.com/DmytroKorniienko/DFRobotDFPlayerMini
;monitor_speed = 115200
monitor_speed = 460800
upload_speed = 460800
monitor_flags =
  --quiet
  --echo
  --eol
    LF
;   --filter
;     colorize
  --filter
    time

; ESP8266 debug version
[env:esp8266dev]
;platform = espressif8266
platform = espressif8266@2.6.3
;platform_packages =
;    framework-arduinoespressif8266 @ https://github.com/esp8266/Arduino.git
board = nodemcuv2
board_build.ldscript = eagle.flash.4m2m.ld
; board = esp12e
; board = d1_mini
; set frequency to 160MHz
; board_build.f_cpu = 160000000L
; set frequency to 80MHz
; board_build.f_flash = 80000000L
; board_build.flash_mode = qio
; board_build.ldscript = eagle.flash.4m1m.ld
build_flags =
    ${extra.build_flags}
    -DLAMP_DEBUG=1
    -DEMBUI_DEBUG
    -DEMBUI_PUB_PERIOD=30 ; публикация значений время/память/ФС - каждые 30 секунд
    ; -DEMBUI_NTP_POOL_REGION='europe'
    ; -DEMBUI_CUSTOM_NTP_INDEX=0
;   -Teagle.flash.4m1m.ld
; build_unflags = -fno-exceptions ; Remove default exceptions disabled flag
; build_flags = -fexceptions ; Enable exceptions
lib_deps =
    ${env.lib_deps}
	https://github.com/DmytroKorniienko/EmbUI.git#dev
monitor_filters = esp8266_exception_decoder
;build_type = debug ; почему-то вызывает ребут в рандомном месте sync_parameters()

; ESP8266 debug version 3.0.0
[env:esp8266dev30]
platform = espressif8266
; platform = espressif8266@2.6.3
;platform_packages =
;    framework-arduinoespressif8266 @ https://github.com/esp8266/Arduino.git

; set frequency to 160MHz
; board_build.f_cpu = 160000000L
; ; set frequency to 80MHz
; board_build.f_flash = 80000000L
; board_build.flash_mode = dio

board = nodemcuv2
board_build.ldscript = eagle.flash.4m2m.ld
build_flags =
    ${extra.build_flags}
    -DLAMP_DEBUG=1 ;
    -DEMBUI_DEBUG=1
    ;-D_DEBUG ; DFPlayer debug
    -DEMBUI_USE_SECHEAP=1
    -DEMBUI_PUB_PERIOD=30 ; публикация значений время/память/ФС - каждые 30 секунд
    -DFASTLED_ALLOW_INTERRUPTS=1
    -DFASTLED_INTERRUPT_RETRY_COUNT=3
    -DINTERRUPT_THRESHOLD=0
    ;-DFASTLED_DEBUG_COUNT_FRAME_RETRIES=1
    -DPIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM48_SECHEAP_SHARED=1
    -Dregister=
    -DARDUINOJSON_USE_LONG_LONG=1
lib_deps =
    https://github.com/FastLED/FastLED.git
    https://github.com/DmytroKorniienko/EmbUI.git#dev
    https://github.com/DmytroKorniienko/DFRobotDFPlayerMini
monitor_filters = esp8266_exception_decoder
; build_type = debug ; почему-то вызывает ребут в рандомном месте sync_parameters()
; upload_port = COM8
; monitor_port = COM8
; upload_port = COM11
; monitor_port = COM11

;;; ----------------------------------------------------------------
; лучше использовать http-upload метод через браузер http://embui-xxxx/upload
; либо из командной строки curl -v -X POST http://embui-xxxx/update -F 'name=@.pio/build/esp8266dev/firmware.bin'
; upload_protocol = espota
; upload_port = 192.168.1.39
; ;upload_port = embui-2EF432778FF0.local
; ;upload_port = embui-2EF4323C728E.local
; upload_flags =
;     --auth=12345
;     -p 3232

; ESP8266 version
; собирается без возможности вывода отладочных сообщений через serial-порт для экономии ресурсов
; использовать для заливки в готовую лампу, если не собираетесь отлаживать ее работу
[env:esp8266]
;platform = espressif8266
platform = espressif8266@2.6.3
board = d1_mini
board_build.ldscript = eagle.flash.4m2m.ld
build_flags =
    ${extra.build_flags}
lib_deps =
    ${env.lib_deps}
  	https://github.com/DmytroKorniienko/EmbUI.git#v2.7.0

; ESP8266 version "160MHz"
; сборка с разогном CPU до 160 MHz
; может использоваться если подключено более чем 1 матрица
; т.к. стандартной частоты в 80 MHz на 2 матрицы уже не хватает чтобы обеспечить вывод >40 FPS на большинстве эффектов
[env:esp8266@160]
;platform = espressif8266
platform = espressif8266@2.6.3
board = d1_mini
board_build.ldscript = eagle.flash.4m2m.ld
; set frequency to 160MHz
board_build.f_cpu = 160000000L
build_flags =
    ${extra.build_flags}
lib_deps =
    ${env.lib_deps}
	https://github.com/DmytroKorniienko/EmbUI.git#v2.7.0

; ESP8266 version "160MHz"
; сборка с разогном CPU до 160 MHz
; может использоваться если подключено более чем 1 матрица
; т.к. стандартной частоты в 80 MHz на 2 матрицы уже не хватает чтобы обеспечить вывод >40 FPS на большинстве эффектов
[env:esp8266@160dev]
;platform = espressif8266
platform = espressif8266@2.6.3
board = d1_mini
board_build.ldscript = eagle.flash.4m2m.ld
; set frequency to 160MHz
board_build.f_cpu = 160000000L
;build_type = debug ; почему-то вызывает ребут в рандомном месте sync_parameters()
build_flags =
    ${extra.build_flags}
    -DLAMP_DEBUG=1
    ;-D_DEBUG ; DFPlayer debug
    -DEMBUI_DEBUG
lib_deps =
    ${env.lib_deps}
	https://github.com/DmytroKorniienko/EmbUI.git#dev
monitor_filters = esp8266_exception_decoder

[env:esp32]
platform = espressif32

; platform = https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
; platform_packages =
;   framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2

framework = arduino
board = esp32dev
board_build.partitions = esp32_4MiB.csv
build_flags =
    ${extra32.build_flags}
    ;-DLAMP_DEBUG=1
    ;-DEMBUI_DEBUG
    -DLED_BUILTIN=2
    ; -DCASHED_EFFECTS_NAMES
    ; Logging level: 1 = error, 2 = warning, 3 = info, 4 = debug, 5 = verbose
    ;-D CORE_DEBUG_LEVEL=4
    ;-D CONFIG_ARDUHAL_LOG_COLORS=1
lib_deps =
    ${env32.lib_deps}
    https://github.com/DmytroKorniienko/EmbUI.git#v2.7.0
    ;https://github.com/plerup/espsoftwareserial.git
monitor_filters = esp32_exception_decoder
;extra_scripts = replace_fs.py
monitor_speed = 460800
upload_speed = 460800

[env:esp32ext] ; 8mb with debug
framework = arduino
;platform = espressif32
;platform = https://github.com/tasmota/platform-espressif32/releases/download/v.2.0.3/platform-espressif32-v.2.0.3.zip

platform = https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
platform_packages =
;     framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.2
    framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.3
;     ;framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git
; adafruit_feather_esp32_v2
board = az-delivery-devkit-v4 ; наиболее подходящая https://docs.espressif.com/projects/esp-idf/en/latest/esp32/hw-reference/esp32/get-started-devkitc.html
board_build.partitions = default_8MB.csv ; https://github.com/espressif/arduino-esp32/blob/master/tools/partitions
board_upload.flash_size = 8MB
board_upload.maximum_size = 8388608
;board_build.partitions = default_16MB.csv
;board_build.flash_mode = qio
; ; set frequency to 160MHz
; board_build.f_cpu = 160000000L
build_type = debug
build_flags =
    ${extra32.build_flags}
    -DLAMP_DEBUG=1
    -DEMBUI_DEBUG
	-DBOARD_HAS_PSRAM
	-mfix-esp32-psram-cache-issue
    ; -DCASHED_EFFECTS_NAMES
    ; Logging level: 1 = error, 2 = warning, 3 = info, 4 = debug, 5 = verbose
    ;-DCORE_DEBUG_LEVEL=4
    ;-D CONFIG_ARDUHAL_LOG_COLORS=1
lib_deps =
    ${env32.lib_deps}
    ;ESP32SSDP
    https://github.com/DmytroKorniienko/EmbUI.git#dev
    ;https://github.com/lorol/LITTLEFS.git
    ;https://github.com/plerup/espsoftwareserial.git
monitor_filters = esp32_exception_decoder
; extra_scripts = replace_fs.py
monitor_speed = 460800 ;115200 ;
upload_speed = 921600

debug_tool = jlink
; upload_protocol = jlink
debug_init_break = tbreak setup
; debug_speed = 5000

[env:esp32ext4] ; 4mb with debug
framework = arduino
platform = espressif32
; lib_compat_mode = strict
board = az-delivery-devkit-v4 ; наиболее подходящая https://docs.espressif.com/projects/esp-idf/en/latest/esp32/hw-reference/esp32/get-started-devkitc.html
board_build.partitions = noota.csv ; https://github.com/espressif/arduino-esp32/blob/master/tools/partitions
build_type = debug
build_flags =
    ${extra32.build_flags}
    -DLAMP_DEBUG=1
    -DEMBUI_DEBUG
	-DBOARD_HAS_PSRAM
	-mfix-esp32-psram-cache-issue
    ; -DCASHED_EFFECTS_NAMES
    ; Logging level: 1 = error, 2 = warning, 3 = info, 4 = debug, 5 = verbose
    ;-DCORE_DEBUG_LEVEL=4
    ;-D CONFIG_ARDUHAL_LOG_COLORS=1
lib_deps =
    ${env32.lib_deps}
    ;ESP32SSDP
    https://github.com/DmytroKorniienko/EmbUI.git#dev
    ;https://github.com/lorol/LITTLEFS.git
    ;https://github.com/plerup/espsoftwareserial.git
monitor_filters = esp32_exception_decoder
;extra_scripts = replace_fs.py
monitor_speed = 460800
upload_speed = 921600

debug_tool = jlink
; upload_protocol = jlink
debug_init_break = tbreak setup
; debug_speed = 5000

[env:esp32c3] ; 4mb without OTA
framework = arduino

platform = https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
platform_packages =
    ;framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.1
    framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git

; platform = espressif32
; platform_packages =
;     toolchain-riscv-esp@file://d:\toolchains\riscv32-esp-elf ; https://github.com/espressif/crosstool-NG - релизы тулчейнов
;     framework-arduinoespressif32@https://github.com/espressif/arduino-esp32.git
;     platformio/tool-esptoolpy @ ~1.30100

board = esp32dev ; board hack
;board = esp32-c3-devkitm-1
board_build.mcu = esp32c3
board_build.partitions = noota.csv
board_build.f_cpu = 160000000L
board_build.f_flash = 80000000L
; board_build.flash_mode = qio
board_build.arduino.ldscript = esp32c3_out.ld
build_type = debug
build_flags =
    ${extra32.build_flags}
    -DLED_BUILTIN=3 ; 3,4,5
    -DLAMP_DEBUG=1
    -DEMBUI_DEBUG
    ;-DFASTLED_ALLOW_INTERRUPTS=1
    ;-DFASTLED_INTERRUPT_RETRY_COUNT=3
    ;-DINTERRUPT_THRESHOLD=0
    ; Logging level: 1 = error, 2 = warning, 3 = info, 4 = debug, 5 = verbose
    ;-DCORE_DEBUG_LEVEL=4
    ;-DCONFIG_ARDUHAL_LOG_COLORS=1
lib_deps =
    ;${env32.lib_deps}
    https://github.com/plerup/espsoftwareserial.git
    https://github.com/DmytroKorniienko/DFRobotDFPlayerMini
    https://github.com/DmytroKorniienko/EmbUI.git#dev
    https://github.com/FastLED/FastLED.git
monitor_filters = esp32_exception_decoder, default
;extra_scripts = replace_fs.py
monitor_speed = 460800
upload_speed = 921600
monitor_port = COM11
upload_port = COM11
; monitor_port = COM17
; upload_port = COM17
monitor_rts = 0
monitor_dtr = 0
; monitor_rts = 1
; monitor_dtr = 1

monitor_flags =
  --quiet
  --echo
  --eol
    LF
  --filter
    time

; debug_tool = jlink
; ; upload_protocol = jlink
; debug_init_break = tbreak setup
; ; debug_speed = 5000

; https://docs.ai-thinker.com/_media/esp32/docs/esp32-c3f_specification.pdf
; https://docs.espressif.com/projects/esp-idf/en/latest/esp32c3/api-guides/jtag-debugging/configure-builtin-jtag.html

; debug_tool = COM14
; debug_port = COM14
debug_tool = custom
debug_server =
  $PLATFORMIO_CORE_DIR/packages/tool-openocd-esp32/bin/openocd
  -f
  $PLATFORMIO_CORE_DIR/packages/tool-openocd-esp32/share/openocd/scripts/board/esp32c3-builtin.cfg
debug_init_break = tbreak setup

[env:esp32s2]
framework = arduino

platform = https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
platform_packages =
    ;framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.1
    framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git

; platform = espressif32
; platform_packages =
;     toolchain-xtensa32s2@file://d:\toolchains\xtensa-esp32s2-elf
;     framework-arduinoespressif32@https://github.com/espressif/arduino-esp32.git
;     platformio/tool-esptoolpy @ ~1.30100

board = esp32dev
board_build.mcu = esp32s2
board_build.partitions = noota.csv
; board_build.flash_mode = qio
; build_type = debug
build_flags =
    ${extra32.build_flags}
    -DBOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -DLED_BUILTIN=3
    -DLAMP_DEBUG=1
    -DEMBUI_DEBUG
    -DFASTLED_ALLOW_INTERRUPTS=0
    -DINTERRUPT_THRESHOLD=0    
    ; Logging level: 1 = error, 2 = warning, 3 = info, 4 = debug, 5 = verbose
    ;-DCORE_DEBUG_LEVEL=4
    ;-D CONFIG_ARDUHAL_LOG_COLORS=1
lib_deps =
    ;${env32.lib_deps}
    https://github.com/plerup/espsoftwareserial.git
    https://github.com/DmytroKorniienko/DFRobotDFPlayerMini
    https://github.com/DmytroKorniienko/EmbUI.git#dev
    https://github.com/FastLED/FastLED.git
monitor_filters = esp32_exception_decoder
;extra_scripts = replace_fs.py
upload_protocol = esptool
upload_speed = 921600
monitor_port = COM11
upload_port = COM11

; debug_tool = jlink
; upload_protocol = jlink
debug_init_break = tbreak setup
; debug_speed = 5000

[env:esp32s3]
framework = arduino

;platform = espressif32
platform = https://github.com/tasmota/platform-espressif32/releases/download/v.2.0.3/platform-espressif32-v.2.0.3.zip

; platform = https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
; platform_packages =
;      framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.3
;     ;framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git


board_build.partitions = default_8MB.csv ; https://github.com/espressif/arduino-esp32/blob/master/tools/partitions
; board_upload.flash_size = 8MB
; board_upload.maximum_size = 8388608

board = esp32-s3-devkitc-1
;board_build.mcu = esp32s3
; board_build.flash_mode = qio
; build_type = debug
build_flags =
    ${extra32.build_flags}
    ; -DBOARD_HAS_PSRAM
    ; -mfix-esp32-psram-cache-issue
    -DLED_BUILTIN=2
    -DLAMP_DEBUG=1
    -DEMBUI_DEBUG
    ; -DFASTLED_ALLOW_INTERRUPTS=0
    ; -DINTERRUPT_THRESHOLD=0    
    ; Logging level: 1 = error, 2 = warning, 3 = info, 4 = debug, 5 = verbose
    ;-DCORE_DEBUG_LEVEL=3
    ;-D CONFIG_ARDUHAL_LOG_COLORS=1
lib_deps =
    ${env32.lib_deps}
    ; https://github.com/DmytroKorniienko/EmbUI.git#dev
    ; https://github.com/FastLED/FastLED.git
    ; https://github.com/plerup/espsoftwareserial.git
    ; https://github.com/DmytroKorniienko/DFRobotDFPlayerMini
monitor_filters = esp32_exception_decoder
; extra_scripts = replace_fs.py
upload_protocol = esptool
monitor_speed = 460800 ; 115200 ;
upload_speed = 921600
monitor_port = COM19
upload_port = COM19
monitor_flags =
  --quiet
  --echo
  --eol
    LF
  --filter
    colorize
  --filter
    time

; debug_tool = jlink
; upload_protocol = jlink
debug_init_break = tbreak setup
; debug_speed = 5000