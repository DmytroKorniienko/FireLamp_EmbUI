; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


; eagle.flash.512k0.ld 512K (no LittleFS)
; eagle.flash.512k64.ld 512K (64K LittleFS)
; eagle.flash.512k128.ld 512K (128K LittleFS)
; eagle.flash.1m0.ld 1M (no LittleFS)
; eagle.flash.1m64.ld 1M (64K LittleFS)
; eagle.flash.1m128.ld 1M (128K LittleFS)
; eagle.flash.1m144.ld 1M (144K LittleFS)
; eagle.flash.1m160.ld 1M (160K LittleFS)
; eagle.flash.1m192.ld 1M (192K LittleFS)
; eagle.flash.1m256.ld 1M (256K LittleFS)
; eagle.flash.1m512.ld 1M (512K LittleFS)
; eagle.flash.2m.ld 2M (1M LittleFS)
; eagle.flash.4m1m.ld 4M (1M LittleFS)
; eagle.flash.4m2m.ld 4M (2M LittleFS)
; eagle.flash.4m.ld 4M (3M LittleFS)
; eagle.flash.8m.ld 8M (7M LittleFS)
; eagle.flash.16m.ld 16M (15M LittleFS)

[platformio]
data_dir  = ./data
default_envs = esp8266dev ;esp8266dev ; если нужна сборка для всего, можно просто закомментировать окружение по умолчанию
extra_configs =
  user_*.ini
; подключаем дополнительные конфиги platformio в виде user_*.ini файлов
; если вам нужна свой env для сборки, оформляйте его в виде доп ini файлов, они не будут обновляться из репозитория
; подробнее
; https://docs.platformio.org/en/latest/projectconf/section_platformio.html#extra-configs

; extra_scripts = !python LittleFSBuilder.py

[extra]
; -D__DISABLE_BUTTON0 // отключаем сброс по кнопке "Flash", т.к. на этот пин перенесена лампа, у кого не переназначен - можно убрать
build_flags =
    !python git_rev_macro.py
    -DVERSION=\"1.1.0.2\"
    -D__DISABLE_BUTTON0

[env]
framework = arduino
board_build.filesystem = littlefs
;TODO: разобраться в причинах варнингов
;Warning! Ignore unknown configuration option `lib_deps_builtin` in section [env]
;Warning! Ignore unknown configuration option `lib_deps_external` in section [env]
lib_deps_builtin =
lib_deps_external =
    ; ESP8266FtpServer
    https://github.com/dplasa/FTPClientServer
    FastLED
    ArduinoJson
    https://github.com/anton-zolotarev/ESPAsyncWebServer.git#dev
    AsyncMqttClient
monitor_speed = 115200
upload_speed = 460800
;;; ----------------------------------------------------------------

; //ESP32 debug version
; Сборка под ESP32 лежит в отдельной ветке

;;; ----------------------------------------------------------------

; ESP8266 debug version
[env:esp8266dev]
; platform = https://github.com/platformio/platform-espressif8266.git ; только здесь есть поддержка esp8266_exception_decoder сейчас, в активной - сломали :(
platform = espressif8266
; platform = espressif8266@2.0.0
; platform = espressif8266@1.8.0
;platform_packages =
;    framework-arduinoespressif8266 @ https://github.com/esp8266/Arduino.git
board = nodemcuv2
; board = esp12e
; board = d1_mini
; set frequency to 160MHz
; board_build.f_cpu = 160000000L
; set frequency to 80MHz
; board_build.f_flash = 80000000L
; board_build.flash_mode = qio
; board_build.ldscript = eagle.flash.4m1m.ld
build_flags =
    -D PIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH
    -D LAMP_DEBUG=1
    ${extra.build_flags}
;   -Teagle.flash.4m1m.ld
; build_unflags = -fno-exceptions ; Remove default exceptions disabled flag
; build_flags = -fexceptions ; Enable exceptions
lib_deps =
    ${env.lib_deps_builtin}
    ${env.lib_deps_external}
    https://github.com/kosme/arduinoFFT#develop
; monitor_speed = 74880
; upload_resetmethod = nodemcu
; upload_speed = 921600
monitor_filters = esp8266_exception_decoder
;build_type = debug

;;; ----------------------------------------------------------------
; лучше использовать http-upload метод через браузер http://JeeUI2-xxxx/upload
; либо из командной строки curl -v -X POST http://JeeUI2-xxxx/update -F 'name=@.pio/build/esp8266dev/firmware.bin'
; upload_protocol = espota
; upload_port = 192.168.1.39
; ;upload_port = JeeUI2-2EF432778FF0.local
; ;upload_port = JeeUI2-2EF4323C728E.local
; upload_flags =
;     --auth=12345
;     -p 3232

; ESP8266 version
; собирается без возможности вывода отладочных сообщений через serial-порт для экономии ресурсов
; использовать для заливки в готовую лампу, если не собираетесь отлаживать ее работу
[env:esp8266]
platform = espressif8266
board = d1_mini
build_flags =
    -D PIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH
    ${extra.build_flags}
lib_deps =
    ${env.lib_deps_builtin}
    ${env.lib_deps_external}
    https://github.com/kosme/arduinoFFT#develop

; ESP8266 version "160MHz"
; сборка с разогном CPU до 160 MHz
; может использоваться если подключено более чем 1 матрица
; т.к. стандартной частоты в 80 MHz на 2 матрицы уже не хватает чтобы обеспечить вывод >40 FPS на большинстве эффектов
[env:esp8266@160]
platform = espressif8266
board = d1_mini
; set frequency to 160MHz
board_build.f_cpu = 160000000L
build_flags =
    -D PIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH
    ${extra.build_flags}
lib_deps =
    ${env.lib_deps_builtin}
    ${env.lib_deps_external}
    https://github.com/kosme/arduinoFFT#develop
